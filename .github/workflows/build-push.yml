name: build and push docker image

on:
  workflow_dispatch:

  push:
    branches:
      - master
    paths:
      - '[0-9].*/**'
  schedule:
    - cron:  '15 00 * * *'

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spip-version: [3.1, 3.2]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Calculate Docker image tags and caches
        id: tags_caches
        env:
          DOCKER_IMAGES: "${{ github.actor }}/spip ghcr.io/${{ github.actor }}/docker-spip"
        run: |
          TAGS=()
          CACHES=()
          COUNT=0
          for image in $DOCKER_IMAGES; do
            TAGS+=("${image}:${{ matrix.spip-version }}")
            if [[ ${COUNT} -eq 0 ]]; then
              CACHES+=("${image}:${{ matrix.spip-version }}")
            fi
            if [[ "${{ matrix.spip-version }}" == "3.2" ]]; then
              TAGS+=("${image}:latest")
              if [[ ${COUNT} -eq 0 ]]; then
                CACHES+=("${image}:latest")
              fi
            fi
            ((COUNT+=1))
          done
          echo ::set-output name=tags::$(IFS=,; echo "${TAGS[*]}")
          echo ::set-output name=caches::$(IFS=,; echo "${CACHES[*]}")
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.spip-version }}/
          platforms: linux/386,linux/amd64
          push: true
          tags: ${{ steps.tags_caches.outputs.tags }}
          cache-from: ${{ steps.tags_caches.outputs.caches }}
          cache-to: type=inline
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
